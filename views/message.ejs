<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat App</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
    />
    <style>
      body {
        font-family: Arial, sans-serif;
        /* Use a gradient background */
        background-image: linear-gradient(120deg, #f6d365 0%, #fda085 100%);
        margin: 0;
        padding: 0;
      }

      .container {
        max-width: 600px;
        margin: auto;
        padding: 20px;
        /* Add some spacing from the top */
        margin-top: 50px;
      }

      #chat {
        display: flex;
        flex-direction: column;
        height: 70vh; /* Adjust height to fit screen */
      }

      #messages-container {
        flex: 1; /* To allow it to grow and occupy remaining space */
        overflow-y: auto; /* Enable vertical scrolling */
      }

      #input-container {
        background-image: linear-gradient(120deg, #834b02 0%, #5e3428 100%);
        border-radius: 2ch;
        padding: 10px; /* Add some padding */
        box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1); /* Add a shadow at the bottom */
      }

      .message {
        margin-bottom: 10px;
        padding: 10px;
        border-radius: 8px;
        max-width: 80%;
      }

      .message.sender {
        background-color: #dcf8c6;
        margin-left: auto;
      }

      .message.sender strong {
        color: #4caf50;
      }

      .message.receiver {
        background-color: #f1f1f1;
        margin-right: auto;
      }

      .message.receiver strong {
        color: #333;
      }

      /* Custom styling for input fields */
      .form-control {
        border-radius: 20px;
        border-color: #ccc; /* Change border color */
        font-size: 16px; /* Change font size */
      }

      .btn-primary {
        border-radius: 20px;
      }
      /* #delete-all {
        position: absolute;
        top: 0;
        right: 0;
        margin-top: 0.5rem;
        margin-right: 0.5rem;
      } */
    </style>
  </head>
  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <a class="navbar-brand" href="/">My Website</a>
      <button
        class="navbar-toggler"
        type="button"
        data-toggle="collapse"
        data-target="#navbarNav"
        aria-controls="navbarNav"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ml-auto">
          <li class="nav-item">
            <a class="nav-link" href="/">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="about">About</a>
          </li>
          <li class="nav-item">
            <a class="nav-link active" href="/message">Chat</a>
          </li>
        </ul>
      </div>
    </nav>

    <div class="container mt-5">
      <h2 class="text-center position-relative">
        Chat App
        <button
          id="delete-all"
          class="btn btn-danger btn-sm position-absolute"
          style="top: 50%; transform: translateY(-50%); right: 10px"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            fill="currentColor"
            class="bi bi-trash"
            viewBox="0 0 16 16"
          >
            <path
              d="M6.879 2.122a.5.5 0 0 1 .707 0l1.414 1.414A.5.5 0 0 1 9 3.536V5h1a2 2 0 0 1 2 2v1.657a5.482 5.482 0 0 1 1.5 1.208V7a1 1 0 0 1 1-1h1V4a1 1 0 0 0-1-1H6.879zM5.02 2.122a.5.5 0 0 0-.707 0L3.899 3.536 3.293 4.122A.5.5 0 0 0 3 4.536v1.121a5.482 5.482 0 0 1 1.5 1.208V5a1 1 0 0 1 1-1h1V3.536a.5.5 0 0 0-.146-.354L5.02 2.122zM13 7v2.5a.5.5 0 0 1-.5.5H3.5a.5.5 0 0 1-.5-.5V7h10zm-1-5H4a1 1 0 0 0-1 1v1h10V3a1 1 0 0 0-1-1z"
            />
          </svg>
        </button>
      </h2>

      <div id="chat">
        <div id="messages-container">
          <ul id="messages"></ul>
        </div>
        <div id="input-container">
          <form id="form" action="">
            <div class="form-group">
              <input
                id="username"
                type="text"
                class="form-control"
                placeholder="Your Name"
                autocomplete="off"
              />
            </div>
            <div class="form-group">
              <input
                id="input"
                type="text"
                class="form-control"
                placeholder="Enter your message"
                autocomplete="off"
              />
            </div>
            <button class="btn btn-primary btn-block bg-dark">Send</button>
          </form>
        </div>
      </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.1.2/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
      const socket = io();

      const form = document.querySelector("form");
      const input = document.querySelector("#input");
      const usernameInput = document.querySelector("#username");
      const messagesList = document.querySelector("#messages");

      form.addEventListener("submit", (e) => {
        e.preventDefault();
        if (usernameInput.value.trim() === "") {
          alert("Please enter your name.");
          return;
        }

        if (input.value) {
          socket.emit("send message", {
            user: usernameInput.value,
            message: input.value,
          });
          input.value = "";
          // input.blur(); // Blur input to hide keyboard
        }
      });

      socket.on("load messages", (messages) => {
        messagesList.innerHTML = "";
        messages.forEach((msg) => {
          displayMessage(msg);
        });
      });

      socket.on("receive message", (data) => {
        displayMessage(data);
      });

      function displayMessage(data) {
        const messageClass =
          data.user === usernameInput.value ? "sender" : "receiver";
        const messageElement = `<li class="message ${messageClass}"><strong>${data.user}:</strong> ${data.message}</li>`;
        messagesList.insertAdjacentHTML("beforeend", messageElement);
        // Scroll to bottom
        messagesList.scrollTop =
          messagesList.scrollHeight - messagesList.clientHeight;
      }
      document
        .getElementById("delete-all")
        .addEventListener("click", function () {
          if (confirm("Are you sure you want to delete all chats?")) {
            // Send a request to delete all chats
            fetch("/delete-all-chats", {
              method: "DELETE",
            })
              .then((response) => {
                if (response.ok) {
                  // If deletion is successful, reload the page to update the chat
                  location.reload();
                } else {
                  // Handle error
                  console.error("Failed to delete chats");
                }
              })
              .catch((error) => {
                console.error("Error:", error);
              });
          }
        });
    </script>
  </body>
</html>
